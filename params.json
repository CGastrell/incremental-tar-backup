{"name":"Incremental Tar Backup","tagline":"Bash script para backups incrementales","body":"> Bash script para backups incrementales\r\n\r\n***\r\n## Configuración/Implementación\r\n\r\nReemplazar en los scripts las referencias a:\r\n\r\n* <code>DIR</code>: el directorio que queremos backupear\r\n* <code>/path/to/dir</code>: la ruta al directorio que CONTIENE a <code>DIR</code>\r\n* <code>/path/to/workspace</code>: la ruta a un directorio que usemos temporalmente para alojar los tar/snar\r\n* <code>/backup</code>: un directorio donde se alojan los backups, probablemente un servidor de almacenamiento montado en un directorio local\r\n* <code>DATE</code>: una variable que declaro para tener referencia de la fecha y usarla en los nombres de los archivos (no es necesario cambiarla)\r\n\r\nCorrer por primera vez el script [full-backup.sh](https://github.com/CGastrell/incremental-tar-backup/blob/master/full-back-up.sh) a mano para inicializar los archivos incrementales y el snapshot.\r\n\r\n***\r\n## Uso típico\r\n\r\nEstos scripts sirven principalmente para guardar estados de un directorio de manera incremental.\r\nDicho de otra manera, podemos armar estos scripts para que hagan backup de un sitio que tenemos\r\npublicado sin tener que copiar todos los archivos, solo los que hayan cambiado.\r\nEjemplo de las variables de referencia:\r\n\r\n* <code>DIR</code>: /var/www/misitio\r\n* <code>/path/to/dir</code>: /var/www\r\n* <code>/path/to/workspace</code>: /var/backups/sitioweb\r\n* <code>/backup</code>: /mount/backupserverNFS\r\n\r\n***\r\n## Crontab\r\n\r\nPara que estos scripts tengan sentido habrá que ponerlos en el [cron](https://en.wikipedia.org/wiki/Cron).\r\n\r\nHay que estar atento que la cuenta que genere el crontab tenga permisos de lectura/escritura en los directorios\r\ncorrespondientes.\r\n\r\nLuego, el backup full no queremos correrlo muy seguido, en mi caso es cada 10 días a las 3AM (o, según dicen, cada vez que el\r\ndía del mes es múltiplo de 10). Ej:\r\n\r\n<pre>\r\n0 3 */10 * * /path/to/full-backup.sh\r\n</pre>\r\n\r\nY para que el incremental se corra todos los días a las 4AM:\r\n\r\n<pre>\r\n0 4 * * * /path/to/incremental-backup.sh\r\n</pre>\r\n\r\nEs importante que corras la primera vez el [full-backup.sh](https://github.com/CGastrell/incremental-tar-backup/blob/master/full-back-up.sh) a mano (no esperes que lo haga el cron).\r\n\r\n***\r\n## Incremental simple vs incremental por niveles\r\n\r\nEl incremental del [tar](http://kb.iu.edu/data/acfi.html) se puede usar de 2 maneras:\r\n\r\n* Creando incrementales directos sobre un full back up (simple)\r\n* Creando niveles de incrementales (menos simple)\r\n\r\nEn el primer caso, se hace un incremental usando el parametro <code>--listed-incremental</code> y un archivo de\r\nsnapshot (.snar) que se encarga de comparar y definir las diferencias para incluir en el incremental. Para restaurar\r\n<code>DIR</code> bastará con extraer el full backup y luego el de la fecha a restaurar.\r\n\r\n<pre>\r\ntar -xzpf DIR-20130720-full.tar.gz\r\ntar -xzpf DIR-20130724-incremental.tar.gz\r\n</pre>\r\n\r\nEn el segundo, el incremental se hace siempre sobre otro incremental. Si bien esta forma da más control sobre\r\nel incremental y el tamaño de archivo, cuando se quiere restaurar <code>DIR</code> habrá que hacerlo secuencialmente\r\ncomo están hechos los incrementales. Ejemplo considerando que tenemos 4 incrementales:\r\n\r\n```\r\ntar -xzpf DIR-20130720-full.tar.gz\r\ntar -xzpf DIR-20130721-incremental.tar.gz\r\ntar -xzpf DIR-20130722-incremental.tar.gz\r\ntar -xzpf DIR-20130723-incremental.tar.gz\r\ntar -xzpf DIR-20130724-incremental.tar.gz\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}